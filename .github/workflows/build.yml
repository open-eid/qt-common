name: CI
on: [push, pull_request]
env:
  BUILD_NUMBER: ${{ github.run_number }}
  CMAKE_BUILD_PARALLEL_LEVEL: 4
jobs:
  macos:
    name: Build on macOS
    runs-on: macos-latest
    env:
      MACOSX_DEPLOYMENT_TARGET: 12.0
      HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Install libraries
      run: brew install qt@6
    - name: Build
      run: |
        cmake -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl@3.0 -B build -S .
        cmake --build build
  ubuntu:
    name: Build on Ubuntu to ${{ matrix.container }}
    runs-on: ubuntu-latest
    container: ubuntu:${{ matrix.container }}
    strategy:
      matrix:
        container: ['22.04', '24.04', '24.10']
    env:
      DEBIAN_FRONTEND: noninteractive
    steps:
    - name: Install dependencies
      run: apt update -qq && apt install --no-install-recommends -y git ca-certificates build-essential pkg-config cmake libpcsclite-dev libssl-dev libgl-dev qt6-tools-dev qt6-tools-dev-tools qt6-l10n-tools
    - name: Checkout
      uses: actions/checkout@v4
    - name: Build packages
      run: |
        cmake -B build -S .
        cmake --build build
  windows:
    name: Build on Windows
    runs-on: windows-2022
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Prepare vcpkg
      uses: lukka/run-vcpkg@v7
      with:
        vcpkgArguments: openssl
        vcpkgGitCommitId: e4644bd15436d406bba71928d086c809e5c9ca45
        vcpkgTriplet: x64-windows
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: 6.8.1
        arch: win64_msvc2022_64
    - name: Build
      run: |
        cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo `
          -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake -B build -S .
        cmake --build build
